- include_vars: ../../vars/main.yml

- name: Create Folder /srv/prometheus/data if not exist
  ansible.builtin.file:
      path: /srv/prometheus/data
      mode: 0777
      state: directory
  become: true

- name: Create prometheus configuration file
  ansible.builtin.copy:
      dest: /srv/prometheus/prometheus.yml
      src: prometheus_main.yml
      mode: 0644
  become: true

- name: Create Prometheus container
  ansible.builtin.docker_container:
      name: prometheus
      restart_policy: always
      image: prom/prometheus
      network_mode: default
      networks:
          - name: '{{ monitoring_network_name }}'
      volumes:
          - /srv/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
          - /srv/prometheus/data:/prometheus
      command: >
          --config.file=/etc/prometheus/prometheus.yml
          --storage.tsdb.path=/prometheus
          --web.console.libraries=/etc/prometheus/console_libraries
          --web.console.templates=/etc/prometheus/consoles
          --web.enable-lifecycle
      labels:
          traefik.enable: 'true'
          traefik.http.routers.prometheus.rule: 'Host(`prometheus.{{ frontend.domain }}`)'
          traefik.http.routers.prometheus.entrypoints: 'websecure'
          traefik.http.routers.prometheus.tls.certresolver: 'letsencrypt'
          traefik.http.routers.prometheus.middlewares: 'prometheus_auth'
          traefik.http.middlewares.prometheus_auth.basicauth.users: '{{ traefik_htpass }}'
          traefik.http.middlewares.prometheus_auth.basicauth.removeheader: 'true'
          traefik.docker.network: '{{ backend_network_name }}'
